= form_for @group do |f|
  .panel.panel-default
    .panel-heading
      .h3= _('Group')

    .panel-body
      .row
        .col-sm-4
          = _('Name')
        .col-sm-4
          = f.text_field :name, placeholder: _('Name'), class: 'form-control'
        .col-sm-4
      .row
        .col-sm-4
          = _('Inspectors')
        .col-sm-8
          %select.form-control{name: 'group[inspector_ids][]', multiple: true}

      %h4= _('Budget limits')

      - Procurement::BudgetPeriod.order(end_date: :desc).each do |budget_period|
        - budget_limit = @group.budget_limits.find_or_initialize_by(budget_period_id: budget_period.id)
        = f.fields_for :budget_limits, budget_limit do |ff|
          .row
            .col-sm-4
              = ff.hidden_field :budget_period_id
              = budget_period
            .col-sm-4
              = ff.number_field :amount, min: 0, placeholder: _('Budget'), autocomplete: :off, class: 'form-control'
            .col-sm-4

    .panel-footer
      .text-right
        %button.btn.btn-success{type: :submit}
          %i.fa.fa-check
          = _('Save')


:scss
  .panel-body > .row:nth-of-type(even) {
    background: #f9f9f9;
  }

:coffeescript
  $(document).ready ->
    element = $("select[name='group[inspector_ids][]']").select2
      minimumInputLength: 3
      placeholder: '#{_("Name of the inspector")}'
      ajax:
        url: '/procurement/users.json'
        dataType: 'json'
        delay: 250
        data: (params) -> search_term: params.term
        processResults: (data) -> results: data
        cache: true
      escapeMarkup: (markup) -> markup
      templateResult: (result) ->
        if result.loading
          return result.text
        result.firstname + ' ' + result.lastname
      templateSelection: (result) ->
        if result.firstname and result.lastname
          result.firstname + ' ' + result.lastname
        else
          result.text
    #{@group.inspectors.sort{|a,b| a.lastname <=> b.lastname}.to_json(only: [:id, :firstname, :lastname])}.forEach (user, i)->
      option = new Option(user.firstname + ' ' + user.lastname, user.id, true, true)
      element.append(option)
    element.trigger('change')
