%h1= _('Requests')

= form_tag requests_path, remote: true do
  %table.table.table-striped
    %thead
      %tr
        %th{width: '30%'}= _('Description')
        %th{width: '10%'}= _('Desired quantity')
        %th{width: '10%'}= _('Approved quantity')
        %th{width: '15%'}= _('Price')
        %th{width: '20%'}= _('Supplier')
        %th{width: '15%'}= _('Status')
    %tbody
      - @requests.each do |request|
        %tr
          - if request.current?
            %td
              %input{type: :hidden, name: 'requests[][id]', value: request.id}
              %select.form-control{name: 'requests[][description]'}
                %option{value: request.description, selected: true}= request.description
            %td
              %input{name: 'requests[][desired_quantity]', value: request.desired_quantity, placeholder: _('Desired quantity'), autocomplete: :off, size: 3}
            %td
              %input{name: 'requests[][approved_quantity]', value: request.approved_quantity, placeholder: _('Approved quantity'), autocomplete: :off, size: 3}
            %td
              %input{name: 'requests[][price]', value: request.price, placeholder: _('Price'), autocomplete: :off, size: 8}
            %td
              %select.form-control{name: 'requests[][supplier]'}
                %option{value: request.supplier, selected: true}= request.supplier
          - else
            %td= request.description
            %td= request.desired_quantity
            %td= request.approved_quantity
            %td= request.price
            %td= request.supplier
          %td
            :ruby
              label_class = case (status = request.status)
                              when :uninspected
                                'label-default'
                              when :denied
                                'label-danger'
                              when :partially_approved
                                'label-warning'
                              when :completely_approved
                                'label-success'
                            end
            .label{class: label_class}
              = status
      %tr
        %td
          %select.form-control{name: 'requests[][description]'}
        %td
          %input{name: 'requests[][desired_quantity]', placeholder: _('Desired quantity'), autocomplete: :off, size: 3}
        %td
          %input{name: 'requests[][approved_quantity]', placeholder: _('Approved quantity'), autocomplete: :off, size: 3}
        %td
          %input{name: 'requests[][price]', placeholder: _('Price'), autocomplete: :off, size: 8}
        %td
          %select.form-control{name: 'requests[][supplier]'}
        %td
    %tfoot
      %tr
        %td.h1{colspan: 5}
          %i.fa.fa-plus-circle
        %td.text-right
          %button.btn.btn-success{type: :submit}
            %i.fa.fa-check
            = _('Save')

:scss
  form .fa-plus-circle {
    cursor: pointer;
    color: #5cb85c;
  }

:coffeescript
  $(document).ready ->
    $('tfoot').on 'click', '.fa-plus-circle', ->
      target_el = $(this).closest('tfoot').prev('tbody').find('tr:last-child')
      cloned_el = target_el.clone()
      cloned_el.find('input').val('')
      cloned_el.insertAfter(target_el)
      false

    $("form").on("ajax:success", (e, data, status, xhr) ->
      location.reload()
    ).on "ajax:error", (e, xhr, status, error) ->
      errors = ''
      for error in xhr.responseJSON
        errors += '<li>' + error + '</li>'
      $("#flash").html '<ul class="alert alert-danger" style="padding-left: 2em;">' + errors + '</ul>'

    $("select[name='requests[][description]']").select2
      minimumInputLength: 3
      allowClear: true
      placeholder: '#{_("Description")}'
      ajax:
        url: '/procurement/models.json'
        dataType: 'json'
        delay: 250
        data: (params) -> search_term: params.term
        processResults: (data) -> results: $.map data, (item) -> {id: item.name, text: item.name }
        cache: true
      escapeMarkup: (markup) -> markup
      templateResult: (result) -> result.text
      templateSelection: (result) -> result.text
      tags: true

    $("select[name='requests[][supplier]']").select2
      minimumInputLength: 3
      allowClear: true
      placeholder: '#{_("Supplier")}'
      ajax:
        url: '/procurement/suppliers.json'
        dataType: 'json'
        delay: 250
        data: (params) -> search_term: params.term
        processResults: (data) -> results: $.map data, (item) -> {id: item.name, text: item.name }
        cache: true
      escapeMarkup: (markup) -> markup
      templateResult: (result) -> result.text
      templateSelection: (result) -> result.text
      tags: true
