:ruby
  is_editable = ((@budget_period.in_requesting_phase? and (@user == current_user or @group.inspectable_by?(current_user))) or
                 (@budget_period.in_inspection_phase? and @group.inspectable_by?(current_user)))

= form_tag nil, remote: true, multipart: true, class: 'form-horizontal' do
  .panel{class: "panel-#{header_color(@budget_period)}"}
    .panel-heading
      = render partial: 'procurement/budget_periods/header', locals: {budget_period: @budget_period, requests: @requests}

    .panel-body
      - if is_editable and (@group.template_categories.exists? or @group.inspectable_by?(current_user))
        - content_for :sidebar do
          = render partial: 'templates'

      - i = 0
      - @requests.each do |request|
        = render partial: 'request', locals: {request: request}

      - if is_editable
        - @group.template_categories.each do |template_category|
          - template_category.templates.where.not(id: @requests.map(&:template_id)).each do |template|
            .row.request.hidden{data: {template_id: template.id}}
              - i += 1
              .col-xs-6
                .form-group
                  %label.col-xs-4.control-label
                    = _('Article')
                  .col-xs-8
                    %input{type: :hidden, name: "requests[new_#{i}][article_name]", value: template.article_name}
                    %input{type: :hidden, name: "requests[new_#{i}][template_id]", value: template.id}
                    = template.article_name
                .form-group
                  %label.col-xs-4.control-label
                    = _('Article nr. / Producer nr.')
                  .col-xs-8
                    %input{type: :hidden, name: "requests[new_#{i}][article_number]", value: template.article_number}
                    = template.article_number
                .form-group
                  %label.col-xs-4.control-label
                    = _('Supplier')
                  .col-xs-8
                    %input{type: :hidden, name: "requests[new_#{i}][supplier_name]", value: template.supplier_name}
                    = template.supplier_name
                .form-group
                  %label.col-xs-4.control-label
                    = _('Name of receiver')
                  .col-xs-8
                    %input.form-control{name: "requests[new_#{i}][receiver]", placeholder: _('Name of receiver'), autocomplete: :off}
                .form-group
                  %label.col-xs-4.control-label
                    = _('Point of Delivery')
                  .col-xs-8
                    %input.form-control{name: "requests[new_#{i}][location_name]", placeholder: _('Point of Delivery'), autocomplete: :off}
                .form-group
                  %label.col-xs-4.control-label
                    = _('Motivation')
                  .col-xs-8
                    %input.form-control{name: "requests[new_#{i}][motivation]", placeholder: _('Motivation'), autocomplete: :off, maxlength: 255, title: _('max 255 characters'), data: {toggle: 'tooltip', to_be_required: true}}
                .form-group
                  %label.col-xs-4.control-label
                    = _('Priority')
                  .col-xs-8
                    %label
                      %input{type: :radio, name: "requests[new_#{i}][priority]", value: 'high'}
                      .label.label-default= _('high')
                    %label
                      %input{type: :radio, name: "requests[new_#{i}][priority]", value: 'normal', checked: true}
                      .label.label-default= _('normal')
                .form-group
                  %label.col-xs-4.control-label
                    = "%s / %s" % [_('Replacement'), _('New')]
                  .col-xs-8
                    %label
                      %input{type: :radio, name: "requests[new_#{i}][replacement]", value: 1, checked: true}
                      .label.label-default= _('Replacement')
                    %label
                      %input{type: :radio, name: "requests[new_#{i}][replacement]", value: 0}
                      .label.label-default= _('New')
              .col-xs-6
                .form-group
                  %label.col-xs-4.control-label
                    = "%s %s" % [_('Item price'), MoneyRails.default_currency]
                    %span.small= _('incl. VAT')
                  .col-xs-4
                    %input{type: :hidden, name: "requests[new_#{i}][price]", value: template.price}
                    .label.label-primary
                      = template.price
                    -#%input.form-control{name: "requests[new_#{i}][price]", type: :number, min: 0, value: template.price.to_i, placeholder: ("%s %s" % [_('Item price'), _('incl. VAT')]), autocomplete: :off}
                  .col-xs-4
                .form-group
                  %label.col-xs-4.control-label
                    = _('Requested quantity')
                  .col-xs-4
                    %input.form-control{name: "requests[new_#{i}][requested_quantity]", type: :number, min: 1, placeholder: _('Requested quantity'), autocomplete: :off, data: {to_be_required: true}}
                  .col-xs-4
                - if @group.inspectable_by? current_user
                  .form-group
                    %label.col-xs-4.control-label
                      = _('Approved quantity')
                    .col-xs-4
                      %input.form-control{name: "requests[new_#{i}][approved_quantity]", type: :number, min: 0, placeholder: _('Approved quantity'), autocomplete: :off}
                    .col-xs-4
                - if @group.inspectable_by? current_user
                  .form-group
                    %label.col-xs-4.control-label
                      = _('Order quantity')
                    .col-xs-4
                      %input.form-control{name: "requests[new_#{i}][order_quantity]", type: :number, min: 0, placeholder: _('Order quantity'), autocomplete: :off}
                    .col-xs-4
                .form-group
                  %label.col-xs-4.control-label
                    = "%s %s" % [_('Total'), MoneyRails.default_currency]
                    %span.small= _('incl. VAT')
                  .col-xs-8
                    .label.label-primary.total_price
                - if @group.inspectable_by? current_user
                  .form-group
                    %label.col-xs-4.control-label
                      = _('Inspection comment')
                    .col-xs-8
                      %input.form-control{name: "requests[new_#{i}][inspection_comment]", placeholder: _('Inspection comment'), maxlength: 255, data: {toggle: 'tooltip'}, title: _('max 255 characters')}
                .form-group
                  %label.col-xs-4.control-label
                    = _('Attachments')
                  .col-xs-8
                    %input{type: :file, name: "requests[new_#{i}][attachments_attributes][][file]", multiple: true, style: "color:transparent;", onchange: "this.style.color = 'black';"}

        .row.request#new_request.hidden
          - i += 1
          .col-xs-6
            .form-group
              %label.col-xs-4.control-label
                = _('Article')
              .col-xs-8
                %input.form-control{name: "requests[new_#{i}][article_name]", placeholder: _('Article'), data: {to_be_required: true}}
                %input{type: :hidden, name: "requests[new_#{i}][model_id]"}
            .form-group
              %label.col-xs-4.control-label
                = _('Article nr. / Producer nr.')
              .col-xs-8
                %input.form-control{name: "requests[new_#{i}][article_number]", placeholder: _('Article nr. / Producer nr.')}
            .form-group
              %label.col-xs-4.control-label
                = _('Supplier')
              .col-xs-8
                %input.form-control{name: "requests[new_#{i}][supplier_name]", placeholder: _('Supplier')}
                %input{type: :hidden, name: "requests[new_#{i}][supplier_id]"}
            .form-group
              %label.col-xs-4.control-label
                = _('Name of receiver')
              .col-xs-8
                %input.form-control{name: "requests[new_#{i}][receiver]", placeholder: _('Name of receiver'), autocomplete: :off}
            .form-group
              %label.col-xs-4.control-label
                = _('Point of Delivery')
              .col-xs-8
                %input.form-control{name: "requests[new_#{i}][location_name]", placeholder: _('Point of Delivery'), autocomplete: :off}
                %input{type: :hidden, name: "requests[new_#{i}][location_id]"}
            .form-group
              %label.col-xs-4.control-label
                = _('Motivation')
              .col-xs-8
                %input.form-control{name: "requests[new_#{i}][motivation]", placeholder: _('Motivation'), autocomplete: :off, maxlength: 255, title: _('max 255 characters'), data: {toggle: 'tooltip', to_be_required: true}}
            .form-group
              %label.col-xs-4.control-label
                = _('Priority')
              .col-xs-8
                %label
                  %input{type: :radio, name: "requests[new_#{i}][priority]", value: 'high'}
                  .label.label-default= _('high')
                %label
                  %input{type: :radio, name: "requests[new_#{i}][priority]", value: 'normal', checked: true}
                  .label.label-default= _('normal')
            .form-group
              %label.col-xs-4.control-label
                = "%s / %s" % [_('Replacement'), _('New')]
              .col-xs-8
                %label
                  %input{type: :radio, name: "requests[new_#{i}][replacement]", value: 1, checked: true}
                  .label.label-default= _('Replacement')
                %label
                  %input{type: :radio, name: "requests[new_#{i}][replacement]", value: 0}
                  .label.label-default= _('New')
          .col-xs-6
            .form-group
              %label.col-xs-4.control-label
                = "%s %s" % [_('Item price'), MoneyRails.default_currency]
                %span.small= _('incl. VAT')
              .col-xs-4
                %input.form-control{name: "requests[new_#{i}][price]", type: :number, min: 0, placeholder: ("%s %s" % [_('Item price'), _('incl. VAT')]), autocomplete: :off}
              .col-xs-4
            .form-group
              %label.col-xs-4.control-label
                = _('Requested quantity')
              .col-xs-4
                %input.form-control{name: "requests[new_#{i}][requested_quantity]", type: :number, min: 1, placeholder: _('Requested quantity'), autocomplete: :off, data: {to_be_required: true}}
              .col-xs-4
            - if @group.inspectable_by? current_user
              .form-group
                %label.col-xs-4.control-label
                  = _('Approved quantity')
                .col-xs-4
                  %input.form-control{name: "requests[new_#{i}][approved_quantity]", type: :number, min: 0, placeholder: _('Approved quantity'), autocomplete: :off}
                .col-xs-4
            - if @group.inspectable_by? current_user
              .form-group
                %label.col-xs-4.control-label
                  = _('Order quantity')
                .col-xs-4
                  %input.form-control{name: "requests[new_#{i}][order_quantity]", type: :number, min: 0, placeholder: _('Order quantity'), autocomplete: :off}
                .col-xs-4
            .form-group
              %label.col-xs-4.control-label
                = "%s %s" % [_('Total'), MoneyRails.default_currency]
                %span.small= _('incl. VAT')
              .col-xs-8
                .label.label-primary.total_price
            - if @group.inspectable_by? current_user
              .form-group
                %label.col-xs-4.control-label
                  = _('Inspection comment')
                .col-xs-8
                  %input.form-control{name: "requests[new_#{i}][inspection_comment]", placeholder: _('Inspection comment'), maxlength: 255, data: {toggle: 'tooltip'}, title: _('max 255 characters')}
            .form-group
              %label.col-xs-4.control-label
                = _('Attachments')
              .col-xs-8
                %input{type: :file, name: "requests[new_#{i}][attachments_attributes][][file]", multiple: true, style: "color:transparent;", onchange: "this.style.color = 'black';"}

            .form-group
              %label.col-xs-4.control-label
                = _('State')
              .col-xs-6
                .label.label-info
                  = _('New')

              .col-xs-2.text-right
                .btn-group
                  %button.btn.btn-default.btn-sm.dropdown-toggle{type: :button, data: {toggle: 'dropdown'}, aria: {haspopup: true, expanded: false}}
                    %i.fa.fa-gear
                    %span.caret
                  %ul.dropdown-menu.dropdown-menu-right
                    %li
                      %a{href: '#', data: {method: :delete}}
                        %i.fa.fa-trash
                        = _('Delete')

    .panel-footer
      - if is_editable
        .row
          .col-xs-12
            = render partial: 'layouts/procurement/flash', :locals => {:flash => flash}
        .row
          .col-xs-6{style: 'font-size: 2em'}
            %i.fa.fa-plus-circle
          .col-xs-6.text-right
            %button.btn.btn-success{type: :submit}
              %i.fa.fa-check
              = _('Save')

:scss
  .panel-body {
    padding-top: 0;
    & > .row.request {
      border-top: 1px solid #cccccc;
      padding-top: 0.5em;
      padding-bottom: 0.5em;
      &.delete {
        background: #f2dede;
      }
    }
    .form-group {
      min-height: 2.5em;
      vertical-align: middle;
    }
  }

  .form-horizontal .control-label {
    text-align: left;
  }

  label.col-xs-4.control-label:after {
    content: ':';
    margin-left: -0.2em;
  }

:coffeescript
  @zebra_rows = ->
    $('.panel-body > .row.request').css('background-color', 'white')
    $('.panel-body > .row.request:visible:even').css('background-color', '#e2e2e2')

  @scroll_to = (el)->
    $('html, body').animate({
      scrollTop: el.offset().top - 100
    }, 200)
    el.effect( "highlight" )

  @show_template = (template_id)->
    el = $(".row[data-template_id='" + template_id + "']")
    el.removeClass('hidden')
    do zebra_rows
    el.find('input[data-to_be_required]').attr('required', 'true')
    el.find("input[name*='requested_quantity]']").val(1).change()
    scroll_to(el)

  $(document).ready ->
    do zebra_rows

    $('.panel-footer').on 'click', '.fa-plus-circle', ->
      #target_el = $(this).closest('tfoot').prev('tbody').find('tr:last-child')
      #cloned_el = target_el.clone()
      #cloned_el.find('input').val('')
      #cloned_el.insertAfter(target_el)
      $(this).hide()
      $('#new_request input[data-to_be_required]').attr('required', 'true')
      $('#new_request').removeClass('hidden').closest('form').change()
      do zebra_rows
      false

    $("#new_request a[data-method='delete']").on 'click', ->
      $('#new_request input[data-to_be_required]').removeAttr('required')
      $('#new_request').addClass('hidden').find('input').val('')
      do zebra_rows
      false

    $("input[name*='[approved_quantity]']").on 'change', ->
      order_quantity_el = $(this).closest('.request').find("input[name*='[order_quantity]']")
      new_val = $(this).val()
      if (not order_quantity_el.val()) or Number(order_quantity_el.val()) > Number(new_val)
        order_quantity_el.val(new_val)

      inspection_comment_el = $(this).closest('.request').find("input[name*='[inspection_comment]']")
      if new_val == "0"
        inspection_comment_el.attr('required', 'true')
      else
        inspection_comment_el.removeAttr('required')

    $("input[name*='_quantity]'], input[name*='[price]']").on 'change', ->
      order_quantity = $(this).closest('.request').find("input[name*='[order_quantity]']").val()
      approved_quantity = $(this).closest('.request').find("input[name*='[approved_quantity]']").val()
      requested_quantity = $(this).closest('.request').find("input[name*='[requested_quantity]']").val()
      quantity = order_quantity or approved_quantity or requested_quantity
      price_el = $(this).closest('.request').find("input[name*='[price]']")
      total = quantity * price_el.val()
      formatted_total = accounting.formatMoney(total, {symbol: 'CHF', format: "%s %v", precision: 0, thousand: "'"})
      $(this).closest('.request').find(".total_price").data('total', total).html(formatted_total)
      big_total = 0
      $(".total_price").each ->
        if Number($(this).data('total'))
          big_total += Number($(this).data('total'))
      formatted_big_total = accounting.formatMoney(big_total, {symbol: 'CHF', format: "%s %v", precision: 0, thousand: "'"})
      $(".big_total_price").html(formatted_big_total)

    $('input[data-toggle="tooltip"]').on 'focus mouseover', -> $(this).tooltip('toggle')

    $("input[name*='[article_name]']").on('keypress', ->
      $(this).closest('.form-group').find("input[name*='[model_id]']").val('')
    ).autocomplete
      minLength: 3
      source: ( request, response )->
        $.ajax
          url: "/procurement/models.json"
          dataType: "json"
          data:
            search_term: request.term
          success: ( data )->
            response( data )
      select: ( event, ui )->
        $(this).closest('.form-group').find("input[name*='[model_id]']").val( ui.item.id )
        $(this).val( ui.item.name ).change()
        false
    .each ->
      $(this).data('ui-autocomplete')._renderItem = ( ul, item )->
        $( "<li>" ).append( "<a>" + item.name + "</a>" ).appendTo( ul )

    $("input[name*='[supplier_name]']").on('keypress', ->
      $(this).closest('.form-group').find("input[name*='[supplier_id]']").val('')
    ).autocomplete
      minLength: 3
      source: ( request, response )->
        $.ajax
          url: '/procurement/suppliers.json'
          dataType: "json"
          data:
            search_term: request.term
          success: ( data )->
            response( data )
      select: ( event, ui )->
        $(this).closest('.form-group').find("input[name*='[supplier_id]']").val( ui.item.id )
        $(this).val( ui.item.name ).change()
        false
    .each ->
      $(this).data('ui-autocomplete')._renderItem = ( ul, item )->
        $( "<li>" ).append( "<a>" + item.name + "</a>" ).appendTo( ul )

    $("input[name*='[receiver]']").autocomplete
      minLength: 3
      source: ( request, response )->
        $.ajax
          url: '/procurement/users.json'
          dataType: "json"
          data:
            search_term: request.term
          success: ( data )->
            response( data )
            #response($.map data, (item)->
            #  {label: item.firstname + ' ' + item.lastname, value: item.id})
      select: ( event, ui )->
        $(this).val( ui.item.firstname + " " + ui.item.lastname ).change()
        false
    .each ->
      $(this).data('ui-autocomplete')._renderItem = ( ul, item )->
        $( "<li>" ).append( "<a>" + item.firstname + " " + item.lastname + "</a>" ).appendTo( ul )

    $("input[name*='[location_name]']").on('keypress', ->
      $(this).closest('.form-group').find("input[name*='[location_id]']").val('')
    ).autocomplete
      minLength: 3
      source: ( request, response )->
        $.ajax
          url: "/procurement/locations.json"
          dataType: "json"
          data:
            search_term: request.term
          success: ( data )->
            response( data )
      select: ( event, ui )->
        $(this).closest('.form-group').find("input[name*='[location_id]']").val( ui.item.id )
        $(this).val( ui.item.to_s ).change()
        false
    .each ->
      $(this).data('ui-autocomplete')._renderItem = ( ul, item )->
        $( "<li>" ).append( "<a>" + item.to_s + "</a>" ).appendTo( ul )

    $("form button[type='submit']").on 'click', ->
      if $('form :invalid').length
        scroll_to $('form :invalid').first().closest('.request')
        false

    $('form').on('change', ->
      #has_invalid_fields = false
      $('.flash').hide()
    ).on('ajax:success', (e, data, status, xhr) ->
      location.replace $(this).attr('action')
    ).on 'ajax:error', (e, xhr, status, error) ->
      errors = ''
      for error in xhr.responseJSON
        errors += '<li>' + error + '</li>'
      el = $(".flash")
      el.html('<ul class="alert alert-danger" style="padding-left: 2em;">' + errors + '</ul>').show()
      $('html, body').animate({
        scrollTop: el.offset().top - 100
      }, 200)

    $('form input').keypress (e)->
      charCode = e.charCode || e.keyCode || e.which
      if charCode  == 13
        return false

    $('.attachments a.delete').on 'click', ->
      li = $(this).closest('li')
      if li.find("input[name*='[attachments_delete]']").val() == '1'
        li.css('text-decoration', 'none').find("input[name*='[attachments_delete]']").val('')
      else
        li.css('text-decoration', 'line-through').find("input[name*='[attachments_delete]']").val('1')
      false

    $("a.show_template").on 'click', ->
      show_template $(this).data('template_id')
      false

- if params[:template_id]
  :coffeescript
    $(document).ready ->
      show_template #{params[:template_id]}
