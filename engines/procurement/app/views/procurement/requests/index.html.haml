:ruby
  is_editable = ((@budget_period.in_requesting_phase? and (@user == current_user or @group.inspectable_by?(current_user))) or
                 (@budget_period.in_inspection_phase? and @group.inspectable_by?(current_user)))

%h1= _('Requests')

= form_tag nil, remote: true, multipart: true, class: 'form-horizontal' do
  .panel{class: @budget_period.current? ? 'panel-success' : 'panel-default'}
    .panel-heading
      = render partial: 'procurement/budget_periods/header', locals: {budget_period: @budget_period, requests: @requests}

    .panel-body
      - i = 0
      - @requests.each do |request|
        = render partial: 'request', locals: {request: request}

      - if is_editable
        - already_requested_model_descriptions = @requests.map &:model_description
        - @group.template_categories.each do |template_category|
          - template_category.templates.where.not(model_description: already_requested_model_descriptions).each do |template|
            .row.request{data: {template_id: template.id}}
              - i += 1
              .col-xs-6
                .form-group
                  %label.col-xs-5.control-label
                    = succeed ':' do
                      = _('Model name')
                  .col-xs-7
                    %input{type: 'hidden', name: "requests[new_#{i}][model_description]", value: template.model_description}
                    = template.model_description
                .form-group
                  %label.col-xs-5.control-label
                    = succeed ':' do
                      = _('Supplier')
                  .col-xs-7
                    %input{type: 'hidden', name: "requests[new_#{i}][supplier]", value: template.supplier}
                    = template.supplier
                .form-group
                  %label.col-xs-5.control-label
                    = succeed ':' do
                      = _('Name of receiver')
                  .col-xs-7
                    %input.form-control{name: "requests[new_#{i}][receiver]", placeholder: _('Name of receiver')}
                .form-group
                  %label.col-xs-5.control-label
                    = succeed ':' do
                      = _('Department')
                  .col-xs-7
                    %input.form-control{name: "requests[new_#{i}][department]", placeholder: _('Department')}
                .form-group
                  %label.col-xs-5.control-label
                    = succeed ':' do
                      = _('Motivation')
                  .col-xs-7
                    %input.form-control{name: "requests[new_#{i}][motivation]", placeholder: _('Motivation'), maxlength: 255, data: {toggle: 'tooltip'}, title: _('max 255 characters')}
                .form-group
                  %label.col-xs-5.control-label
                    = succeed ':' do
                      = _('Priority')
                  .col-xs-7
                    %input{type: 'radio', name: "requests[new_#{i}][priority]", value: 'high'}
                    .label.label-default= _('high')
                    %input{type: 'radio', name: "requests[new_#{i}][priority]", value: 'normal', checked: true}
                    .label.label-default= _('normal')
                .form-group
                  %label.col-xs-5.control-label
                    = succeed ':' do
                      = _('Attachments')
                  .col-xs-7
                    %input{type: :file, name: "requests[new_#{i}][attachments_attributes][][file]", multiple: true}
              .col-xs-6
                .form-group
                  %label.col-xs-5.control-label
                    = "%s %s" % [_('Item price'), MoneyRails.default_currency]
                    .small=_('incl. VAT')
                  .col-xs-7
                    %input{type: 'hidden', name: "requests[new_#{i}][price]", value: template.price}
                    = template.price
                    -#%input.form-control{name: "requests[new_#{i}][price]", type: :number, min: 0, value: template.price.to_i, placeholder: ("%s %s" % [_('Item price'), _('incl. VAT')]), autocomplete: :off}
                .form-group
                  %label.col-xs-5.control-label
                    = succeed ':' do
                      = _('Requested quantity')
                  .col-xs-7
                    %input.form-control{name: "requests[new_#{i}][requested_quantity]", type: :number, min: 0, placeholder: _('Requested quantity'), autocomplete: :off}
                - if @group.inspectable_by? current_user
                  .form-group
                    %label.col-xs-5.control-label
                      = succeed ':' do
                        = _('Approved quantity')
                    .col-xs-7
                      %input.form-control{name: "requests[new_#{i}][approved_quantity]", type: :number, min: 0, placeholder: _('Approved quantity'), autocomplete: :off}
                - if @group.inspectable_by? current_user
                  .form-group
                    %label.col-xs-5.control-label
                      = succeed ':' do
                        = _('Order quantity')
                    .col-xs-7
                      %input.form-control{name: "requests[new_#{i}][order_quantity]", type: :number, min: 0, placeholder: _('Order quantity'), autocomplete: :off}
                .form-group
                  %label.col-xs-5.control-label
                    = "%s %s" % [_('Total'), MoneyRails.default_currency]
                    .small= _('incl. VAT')
                  .col-xs-7
                    .label.label-primary.total_price
                - if @group.inspectable_by? current_user
                  .form-group
                    %label.col-xs-5.control-label
                      = succeed ':' do
                        = _('Inspection comment')
                    .col-xs-7
                      %input.form-control{name: "requests[new_#{i}][inspection_comment]", placeholder: _('Inspection comment'), maxlength: 255, data: {toggle: 'tooltip'}, title: _('max 255 characters')}

        .row.request#new_request
          - i += 1
          .col-xs-6
            .form-group
              %label.col-xs-5.control-label
                = succeed ':' do
                  = _('Model name')
              .col-xs-7
                %input.form-control{name: "requests[new_#{i}][model_description]", placeholder: _('Model name')}
            .form-group
              %label.col-xs-5.control-label
                = succeed ':' do
                  = _('Supplier')
              .col-xs-7
                %input.form-control{name: "requests[new_#{i}][supplier]", placeholder: _('Supplier')}
            .form-group
              %label.col-xs-5.control-label
                = succeed ':' do
                  = _('Name of receiver')
              .col-xs-7
                %input.form-control{name: "requests[new_#{i}][receiver]", placeholder: _('Name of receiver')}
            .form-group
              %label.col-xs-5.control-label
                = succeed ':' do
                  = _('Department')
              .col-xs-7
                %input.form-control{name: "requests[new_#{i}][department]", placeholder: _('Department')}
            .form-group
              %label.col-xs-5.control-label
                = succeed ':' do
                  = _('Motivation')
              .col-xs-7
                %input.form-control{name: "requests[new_#{i}][motivation]", placeholder: _('Motivation'), maxlength: 255, data: {toggle: 'tooltip'}, title: _('max 255 characters')}
            .form-group
              %label.col-xs-5.control-label
                = succeed ':' do
                  = _('Priority')
              .col-xs-7
                %input{type: 'radio', name: "requests[new_#{i}][priority]", value: 'high'}
                .label.label-default= _('high')
                %input{type: 'radio', name: "requests[new_#{i}][priority]", value: 'normal', checked: true}
                .label.label-default= _('normal')
            .form-group
              %label.col-xs-5.control-label
                = succeed ':' do
                  = _('Attachments')
              .col-xs-7
                %input{type: :file, name: "requests[new_#{i}][attachments_attributes][][file]", multiple: true}
          .col-xs-6
            .form-group
              %label.col-xs-5.control-label
                = "%s %s" % [_('Item price'), MoneyRails.default_currency]
                .small=_('incl. VAT')
              .col-xs-7
                %input.form-control{name: "requests[new_#{i}][price]", type: :number, min: 0, placeholder: ("%s %s" % [_('Item price'), _('incl. VAT')]), autocomplete: :off}
            .form-group
              %label.col-xs-5.control-label
                = succeed ':' do
                  = _('Requested quantity')
              .col-xs-7
                %input.form-control{name: "requests[new_#{i}][requested_quantity]", type: :number, min: 0, placeholder: _('Requested quantity'), autocomplete: :off}
            - if @group.inspectable_by? current_user
              .form-group
                %label.col-xs-5.control-label
                  = succeed ':' do
                    = _('Approved quantity')
                .col-xs-7
                  %input.form-control{name: "requests[new_#{i}][approved_quantity]", type: :number, min: 0, placeholder: _('Approved quantity'), autocomplete: :off}
            - if @group.inspectable_by? current_user
              .form-group
                %label.col-xs-5.control-label
                  = succeed ':' do
                    = _('Order quantity')
                .col-xs-7
                  %input.form-control{name: "requests[new_#{i}][order_quantity]", type: :number, min: 0, placeholder: _('Order quantity'), autocomplete: :off}
            .form-group
              %label.col-xs-5.control-label
                = "%s %s" % [_('Total'), MoneyRails.default_currency]
                .small= _('incl. VAT')
              .col-xs-7
                .label.label-primary.total_price
            - if @group.inspectable_by? current_user
              .form-group
                %label.col-xs-5.control-label
                  = succeed ':' do
                    = _('Inspection comment')
                .col-xs-7
                  %input.form-control{name: "requests[new_#{i}][inspection_comment]", placeholder: _('Inspection comment'), maxlength: 255, data: {toggle: 'tooltip'}, title: _('max 255 characters')}

    .panel-footer
      - if is_editable
        .row
          .col-xs-12
            = render partial: 'layouts/procurement/flash', :locals => {:flash => flash}
        .row
          .col-xs-1{style: 'font-size: 2em'}
            %i.fa.fa-plus-circle
          .col-xs-9
            - @group.template_categories.each do |template_category|
              .btn-group.dropup
                %button.btn.btn-default.dropdown-toggle{type: 'button', data: {toggle: 'dropdown'}, aria: {haspopup: true, expanded: false}}
                  = template_category
                  %span.caret
                %ul.dropdown-menu
                  %li
                    - template_category.templates.where.not(model_description: already_requested_model_descriptions).each do |template|
                      %a.show_template{href: '#', data: {template_id: template.id}}= template

            -#- unless @requests.blank?
              .label.label-primary.big_total_price
                = money_without_cents_and_with_symbol @requests.sum {|r| r.total_price(current_user) }.sum
          .col-xs-2.text-right
            %button.btn.btn-success{type: :submit}
              %i.fa.fa-check
              = _('Save')

:scss
  .panel-footer .fa-plus-circle {
    cursor: pointer;
    color: #5cb85c;
  }

  .panel-body {
    padding-top: 0;

    & > .row.request:nth-of-type(even) {
      background: #f9f9f9;
    }
    & > .row.request {
      border-top: 1px solid #cccccc;
      padding-top: 0.5em;
      padding-bottom: 0.5em;
      &.delete {
        background: #f2dede;
      }
    }
  }

  #new_request {
    display: none;
  }

  .row[data-template_id] {
    display: none;
  }

:coffeescript
  $(document).ready ->
    $('.panel-footer').on 'click', '.fa-plus-circle', ->
      #target_el = $(this).closest('tfoot').prev('tbody').find('tr:last-child')
      #cloned_el = target_el.clone()
      #cloned_el.find('input').val('')
      #cloned_el.insertAfter(target_el)
      $(this).hide()
      $('#new_request').show()
      false

    $("form").on("ajax:success", (e, data, status, xhr) ->
      location.reload()
    ).on "ajax:error", (e, xhr, status, error) ->
      errors = ''
      for error in xhr.responseJSON
        errors += '<li>' + error + '</li>'
      $("#flash").html '<ul class="alert alert-danger" style="padding-left: 2em;">' + errors + '</ul>'

    $("input[name*='[approved_quantity]']").on 'change', ->
      target_el = $(this).closest('.request').find("input[name*='[order_quantity]']")
      new_val = $(this).val()
      target_el.attr('max', new_val)
      if (not target_el.val()) or Number(target_el.val()) > Number(new_val)
        target_el.val(new_val)

    $("input[name*='_quantity]'], input[name*='[price]']").on 'change', ->
      order_quantity = $(this).closest('.request').find("input[name*='[order_quantity]']").val()
      approved_quantity = $(this).closest('.request').find("input[name*='[approved_quantity]']").val()
      requested_quantity = $(this).closest('.request').find("input[name*='[requested_quantity]']").val()
      quantity = order_quantity or approved_quantity or requested_quantity
      price_el = $(this).closest('.request').find("input[name*='[price]']")
      total = quantity * price_el.val()
      formatted_total = accounting.formatMoney(total, {symbol: 'CHF', format: "%s %v", precision: 0, thousand: "'"})
      $(this).closest('.request').find(".total_price").data('total', total).html(formatted_total)
      big_total = 0
      $(".total_price").each ->
        if Number($(this).data('total'))
          big_total += Number($(this).data('total'))
      formatted_big_total = accounting.formatMoney(big_total, {symbol: 'CHF', format: "%s %v", precision: 0, thousand: "'"})
      $(".big_total_price").html(formatted_big_total)

    $("input[name*='requested_quantity]']").on 'change', ->
      if $(this).val() == "0"
        $(this).closest('.request').addClass('delete')
      else
        $(this).closest('.request').removeClass('delete')

    $("a.show_template").on 'click', ->
      $(this).hide()
      $(this).closest('.dropdown-menu').dropdown('toggle')
      $(".row[data-template_id='" + $(this).data('template_id') + "']").show()
      false

    $('input[data-toggle="tooltip"]').on 'focus', -> $(this).tooltip('toggle')

    $("input[name*='[model_description]']").autocomplete
      minLength: 3
      source: ( request, response )->
        $.ajax
          url: "/procurement/models.json"
          dataType: "json"
          data:
            search_term: request.term
          success: ( data )->
            response( data )
      select: ( event, ui )->
        $(this).val( ui.item.name )
        false
    .each ->
      $(this).data('ui-autocomplete')._renderItem = ( ul, item )->
        $( "<li>" ).append( "<a>" + item.name + "</a>" ).appendTo( ul )

    $("input[name*='[supplier]']").autocomplete
      minLength: 3
      source: ( request, response )->
        $.ajax
          url: '/procurement/suppliers.json'
          dataType: "json"
          data:
            search_term: request.term
          success: ( data )->
            response( data )
      select: ( event, ui )->
        $(this).val( ui.item.name )
        false
    .each ->
      $(this).data('ui-autocomplete')._renderItem = ( ul, item )->
        $( "<li>" ).append( "<a>" + item.name + "</a>" ).appendTo( ul )
