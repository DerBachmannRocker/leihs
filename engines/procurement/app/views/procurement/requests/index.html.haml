:ruby
  is_editable = (@group.inspectable_by?(current_user) or (@budget_period.in_requesting_phase? and @user == current_user))

%h1= _('Requests')

= form_tag nil, remote: true, multipart: true do
  .panel{class: @budget_period.current? ? 'panel-success' : 'panel-default'}
    .panel-heading
      = render partial: 'procurement/budget_periods/header', locals: {budget_period: @budget_period, requests: @requests}

    .panel-body
      .row.h5
        .col-sm-2
          = _('Model name')
          %br
          = _('Supplier')
        .col-sm-2
          = _('Desired quantity')
          - if not @budget_period.in_requesting_phase? or @group.inspectable_by?(current_user)
            %br
            = _('Approved quantity')
            %br
            = _('Order quantity')
        .col-sm-2
          = "%s %s" % [_('Price'), MoneyRails.default_currency]
          %br
          = "%s %s" % [_('Total'), MoneyRails.default_currency]
        .col-sm-2
          = _('Status')
          %br
          = _('Priority')
        .col-sm-2
          = _('Receiver')
          %br
          = _('Organization unit')
        .col-sm-2
          = _('Motivation')
          - if not @budget_period.in_requesting_phase? or @group.inspectable_by?(current_user)
            %br
            = _('Inspection comment')
          %br
          = _('Attachment')

      - i = 0
      - @requests.each do |request|
        - if request.editable?(current_user)
          = render partial: 'write', locals: {request: request}
        - else
          = render partial: 'read', locals: {request: request}

      - if is_editable
        - already_requested_model_descriptions = @requests.map &:model_description
        - Procurement::RequestTemplate.where(group_id: @group).where.not(model_description: already_requested_model_descriptions).each do |request_template|
          .row
            .col-sm-12
              - i += 1
              .row
                .col-sm-2
                  %input{type: 'hidden', name: "requests[new_#{i}][model_description]", value: request_template.model_description}
                  = request_template.model_description
                  -#%select.form-control{name: "requests[new_#{i}][model_description]"}
                    %option{value: request_template.model_description, selected: true}= request_template.model_description
                .col-sm-2
                  %input.form-control{name: "requests[new_#{i}][desired_quantity]", type: :number, min: 0, placeholder: _('Desired quantity'), autocomplete: :off}
                .col-sm-2
                  %input.form-control{name: "requests[new_#{i}][price]", type: :number, min: 0, value: request_template.price.to_i, placeholder: _('Price'), autocomplete: :off}
                .col-sm-2
                .col-sm-2
                  %input.form-control{name: "requests[new_#{i}][receiver]", placeholder: _('Receiver')}
                .col-sm-2
                  %input.form-control{name: "requests[new_#{i}][motivation]", placeholder: _('Motivation')}
              .row
                .col-sm-2
                .col-sm-2
                  - if @group.inspectable_by?(current_user)
                    %input.form-control{name: "requests[new_#{i}][approved_quantity]", type: :number, min: 0, placeholder: _('Approved quantity'), autocomplete: :off}
                .col-sm-2
                .col-sm-2
                .col-sm-2
                  %input.form-control{name: "requests[new_#{i}][organization_unit]", placeholder: _('Organization unit')}
                .col-sm-2
                  - if @group.inspectable_by?(current_user)
                    %input.form-control{name: "requests[new_#{i}][inspection_comment]", placeholder: _('Inspection comment')}
              .row
                .col-sm-2
                  %select.form-control{name: "requests[new_#{i}][supplier]"}
                    %option{value: request_template.supplier, selected: true}= request_template.supplier
                .col-sm-2
                  - if @group.inspectable_by?(current_user)
                    %input.form-control{name: "requests[new_#{i}][order_quantity]", type: :number, min: 0, placeholder: _('Order quantity'), autocomplete: :off}
                .col-sm-2
                  .label.label-primary.total_price
                .col-sm-2
                  %input{type: 'radio', name: "requests[new_#{i}][priority]", value: 'high'}
                  .label.label-default= _('high')
                  %input{type: 'radio', name: "requests[new_#{i}][priority]", value: 'medium', checked: true}
                  .label.label-default= _('medium')
                .col-sm-2
                .col-sm-2
                  -#%input{type: :file, name: "requests[new_#{i}][attachments_attributes][][file]", multiple: true}

        .row#new_request
          .col-sm-12
            - i += 1
            .row
              .col-sm-2
                %select.form-control{name: "requests[new_#{i}][model_description]"}
              .col-sm-2
                %input.form-control{name: "requests[new_#{i}][desired_quantity]", type: :number, min: 0, placeholder: _('Desired quantity'), autocomplete: :off}
              .col-sm-2
                %input.form-control{name: "requests[new_#{i}][price]", type: :number, min: 0, placeholder: _('Price'), autocomplete: :off}
              .col-sm-2
              .col-sm-2
                %input.form-control{name: "requests[new_#{i}][receiver]", placeholder: _('Receiver')}
              .col-sm-2
                %input.form-control{name: "requests[new_#{i}][motivation]", placeholder: _('Motivation')}
            .row
              .col-sm-2
              .col-sm-2
                - if @group.inspectable_by?(current_user)
                  %input.form-control{name: "requests[new_#{i}][approved_quantity]", type: :number, min: 0, placeholder: _('Approved quantity'), autocomplete: :off}
              .col-sm-2
              .col-sm-2
              .col-sm-2
                %input.form-control{name: "requests[new_#{i}][organization_unit]", placeholder: _('Organization unit')}
              .col-sm-2
                - if @group.inspectable_by?(current_user)
                  %input.form-control{name: "requests[new_#{i}][inspection_comment]", placeholder: _('Inspection comment')}
            .row
              .col-sm-2
                %select.form-control{name: "requests[new_#{i}][supplier]"}
              .col-sm-2
                - if @group.inspectable_by?(current_user)
                  %input.form-control{name: "requests[new_#{i}][order_quantity]", type: :number, min: 0, placeholder: _('Order quantity'), autocomplete: :off}
              .col-sm-2
                .label.label-primary.total_price
              .col-sm-2
                %input{type: 'radio', name: "requests[new_#{i}][priority]", value: 'high'}
                .label.label-default= _('high')
                %input{type: 'radio', name: "requests[new_#{i}][priority]", value: 'medium', checked: true}
                .label.label-default= _('medium')
              .col-sm-2
              .col-sm-2
                -#%input{type: :file, name: "requests[new_#{i}][attachments_attributes][][file]", multiple: true}

    .panel-footer
      - if is_editable
        .row
          .col-sm-4{style: 'font-size: 2em'}
            %i.fa.fa-plus-circle
          .col-sm-2
            -#- unless @requests.blank?
              .label.label-primary.big_total_price
                = money_without_cents_and_with_symbol @requests.map(&:total_price).sum
          .col-sm-6.text-right
            %button.btn.btn-success{type: :submit}
              %i.fa.fa-check
              = _('Save')

:scss
  .panel-footer .fa-plus-circle {
    cursor: pointer;
    color: #5cb85c;
  }

  .panel-body > .row:nth-of-type(even) > .col-sm-12 {
    background: #f9f9f9;
  }
  .panel-body > .row > .col-sm-12 {
    border-top: 1px solid #cccccc;
    padding-top: 0.5em;
    padding-bottom: 0.5em;
    &.delete {
      background: #f2dede;
    }
  }

  #new_request {
    display: none;
  }

:coffeescript
  $(document).ready ->
    $('.panel-footer').on 'click', '.fa-plus-circle', ->
      #target_el = $(this).closest('tfoot').prev('tbody').find('tr:last-child')
      #cloned_el = target_el.clone()
      #cloned_el.find('input').val('')
      #cloned_el.insertAfter(target_el)
      $('#new_request').show()
      false

    $("form").on("ajax:success", (e, data, status, xhr) ->
      location.reload()
    ).on "ajax:error", (e, xhr, status, error) ->
      errors = ''
      for error in xhr.responseJSON
        errors += '<li>' + error + '</li>'
      $("#flash").html '<ul class="alert alert-danger" style="padding-left: 2em;">' + errors + '</ul>'

    #$("select[name*='[group_id]']").select2
    #  minimumInputLength: 0
    #  allowClear: true
    #  placeholder: '#{_("Group")}'

    $("select[name*='[model_description]']").select2
      minimumInputLength: 3
      #allowClear: true
      placeholder: '#{_("Description")}'
      ajax:
        url: '/procurement/models.json'
        dataType: 'json'
        delay: 250
        data: (params) -> search_term: params.term
        processResults: (data) -> results: $.map data, (item) -> {id: item.name, text: item.name }
        cache: true
      escapeMarkup: (markup) -> markup
      templateResult: (result) -> result.text
      templateSelection: (result) -> result.text
      tags: true

    $("select[name*='[supplier]']").select2
      minimumInputLength: 3
      #allowClear: true
      placeholder: '#{_("Supplier")}'
      ajax:
        url: '/procurement/suppliers.json'
        dataType: 'json'
        delay: 250
        data: (params) -> search_term: params.term
        processResults: (data) -> results: $.map data, (item) -> {id: item.name, text: item.name }
        cache: true
      escapeMarkup: (markup) -> markup
      templateResult: (result) -> result.text
      templateSelection: (result) -> result.text
      tags: true

    $("input[name*='[approved_quantity]']").on 'change', ->
      target_el = $(this).closest('.col-sm-12').find("input[name*='[order_quantity]']")
      if (not target_el.val()) or target_el.val() > $(this).val()
        target_el.val($(this).val())

    $("input[name*='_quantity]'], input[name*='[price]']").on 'change', ->
      order_quantity = $(this).closest('.col-sm-12').find("input[name*='[order_quantity]']").val()
      approved_quantity = $(this).closest('.col-sm-12').find("input[name*='[approved_quantity]']").val()
      desired_quantity = $(this).closest('.col-sm-12').find("input[name*='[desired_quantity]']").val()
      quantity = order_quantity or approved_quantity or desired_quantity
      price_el = $(this).closest('.col-sm-12').find("input[name*='[price]']")
      total = quantity * price_el.val()
      formatted_total = accounting.formatMoney(total, {symbol: 'CHF', format: "%s %v", precision: 0, thousand: "'"})
      $(this).closest('.col-sm-12').find(".total_price").data('total', total).html(formatted_total)
      big_total = 0
      $(".total_price").each ->
        if Number($(this).data('total'))
          big_total += Number($(this).data('total'))
      formatted_big_total = accounting.formatMoney(big_total, {symbol: 'CHF', format: "%s %v", precision: 0, thousand: "'"})
      $(".big_total_price").html(formatted_big_total)

    $("input[name*='desired_quantity]']").on 'change', ->
      if $(this).val() == "0"
        $(this).closest('.col-sm-12').addClass('delete')
      else
        $(this).closest('.col-sm-12').removeClass('delete')
