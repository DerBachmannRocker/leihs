.row
  .col-sm-2
    = render partial: 'filter_panel'
  .col-sm-10
    - @h.each_pair do |budget_period, groups|

      .panel.panel-info
        .panel-heading
          %h2= budget_period

        .panel-body
          - groups.each_pair do |group, values1|
            - total_price = values1[:total_price]
            .panel.panel-default
              .panel-heading
                .row
                  .col-xs-7
                    %h3= group
                  .col-xs-1
                    = render partial: 'procurement/requests/progress_radial', locals: {used: total_price.to_i, max: values1[:budget_limit_amount].to_i}

                  .col-xs-4
                    - if values1[:budget_limit_amount].to_i > 0
                      .label.label-default.budget_limit
                        %i.fa.fa-pie-chart
                        = money_without_cents_and_with_symbol values1[:budget_limit_amount]
                      %br

                    .label.label-primary.big_total_price
                      %i.fa.fa-shopping-cart
                      = money_without_cents_and_with_symbol total_price

              .panel-body
                - next if values1[:total_price].zero?
                - values1[:requests].each do |request|
                  %a.list-group-item{href: group_user_budget_period_requests_path(request.group, request.user, request.budget_period)}
                    .row
                      .col-xs-2
                        .label.label-primary
                          = request.requested_quantity

                        - if request.approved_quantity
                          &nbsp;
                          :ruby
                            state, label_class = state_label(request)
                          .label{class: label_class}
                            = request.approved_quantity

                          - if request.order_quantity
                            &nbsp;
                            .label{class: label_class}
                              = request.order_quantity

                      .col-xs-3
                        = request.article_name
                      .col-xs-2
                        = request.user
                      .col-xs-1.small
                        .label.label-primary.total_price
                          = money_without_cents_and_with_symbol request.price
                      .col-xs-2.small
                        .label.label-primary.total_price
                          = money_without_cents_and_with_symbol request.total_price(current_user)
                      .col-xs-1.small
                        .label.label-default= _(request.priority)
                      .col-xs-1.small
                        :ruby
                          state, label_class = state_label(request)
                        .label{class: label_class}
                          = _(state.to_s.humanize)
