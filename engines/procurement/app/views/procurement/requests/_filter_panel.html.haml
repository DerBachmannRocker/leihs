%form#filter_panel{data: {remote: true}}
  %b
    %i.fa.fa-calendar
    = _('Budget periods')
  %ul
    - Procurement::BudgetPeriod.order(end_date: :desc).each do |budget_period|
      %li
        %input{type: :checkbox, name: 'filter[budget_period_ids][]', value: budget_period.id, checked: params[:filter][:budget_period_ids].map(&:to_i).include?(budget_period.id)}
        = budget_period

  :ruby
    my_groups, other_groups = Procurement::Group.all.partition { |group| group.inspectable_by?(current_user) }

  %b
    %i.fa.fa-shopping-cart
    = _('My groups')
  %ul
    - my_groups.each do |group|
      %li
        %input{type: :checkbox, name: 'filter[group_ids][]', value: group.id, checked: params[:filter][:group_ids].map(&:to_i).include?(group.id)}
        = group

  %b
    %i.fa.fa-shopping-cart
    = _('Other groups')
  %ul
    - other_groups.each do |group|
      %li
        %input{type: :checkbox, name: 'filter[group_ids][]', value: group.id, checked: params[:filter][:group_ids].map(&:to_i).include?(group.id)}
        = group

  %b
    %i.fa.fa-sitemap
    = _('Organization')
  %ul
    -#- Procurement::Organization.departments.each do |department|
      %li
        %input{type: :checkbox, name: 'filter[department_ids][]', value: department.id, checked: params[:filter][:department_ids].map(&:to_i).include?(department.id)}
        = department
    %select{name: 'filter[organization_id]'}
      %option{value: ''}= _('All')
      %optgroup{label: "----------"}
      - Procurement::Organization.departments.each do |department|
        %option{value: department.id, selected: (params[:filter][:organization_id].to_i == department.id)}= department
        - department.children.each do |organization_unit|
          %option{value: organization_unit.id, selected: (params[:filter][:organization_id].to_i == organization_unit.id)}
            &nbsp;&nbsp;&nbsp;
            = organization_unit

  %b
    %i.fa.fa-sort-amount-asc
    = _('Priority')
  %ul
    - ['high', 'normal'].each do |priority|
      %input{type: :checkbox, name: "filter[priorities][]", value: priority, checked: params[:filter][:priorities].include?(priority)}
      .label.label-default= _(priority)

  %b
    %i.fa.fa-code-fork
    = _('State of Request')
  %ul
    - Procurement::Request::STATES.each do |state|
      %li
        %input{type: :checkbox, name: "filter[states][]", value: state, checked: params[:filter][:states].map(&:to_sym).include?(state)}
        .label{class: label_class(state)}= _(state.to_s.humanize)

  %br
  %button.btn.btn-default.btn-xs{type: :submit, name: 'format', value: 'csv'}
    %i.fa.fa-table
    = _('CSV Export')

:scss
  .transparency {
    opacity:0.5;
    filter:alpha(opacity=50);
    -moz-opacity:0.5;
  }

:coffeescript
  $(document).ready ->
    $('form#filter_panel').on('ajax:beforeSend', ->
      $('#filter_overview').addClass('transparency')
    ).on('ajax:complete', (e, data, status, xhr) ->
      $('#filter_overview').html(data.responseText).removeClass('transparency')
    ).on('change', ->
      $(this).submit()
    ).trigger 'submit'
