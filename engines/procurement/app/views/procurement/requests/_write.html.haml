%tr
  %input{type: :hidden, name: "requests[#{request.id}][id]", value: request.id}
  -#%td
              %select.form-control{name: "requests[#{request.id}][group_id]"}
                %option{value: request.group_id, selected: true}= request.group
  %td
    - if Procurement::RequestTemplate.where(group_id: @group).where(description: request.description).exists?
      = request.description
    - else
      %select.form-control{name: "requests[#{request.id}][description]"}
        %option{value: request.description, selected: true}= request.description
  %td
    %input.form-control{name: "requests[#{request.id}][desired_quantity]", type: :number, min: 0, value: request.desired_quantity, placeholder: _('Desired quantity'), autocomplete: :off}
    %br
    - if request.inspectable_by? current_user
      %input.form-control{name: "requests[#{request.id}][approved_quantity]", type: :number, min: 0, value: request.approved_quantity, placeholder: _('Approved quantity'), autocomplete: :off}
    - else
      = request.approved_quantity
    %br
    = render partial: 'status', locals: {request: request}
  %td
    %input.form-control{name: "requests[#{request.id}][price]", type: :number, min: 0, value: request.price.to_i, placeholder: _('Price'), autocomplete: :off}
    %br
    = money_without_cents_and_with_symbol request.total_price
  %td
    %select.form-control{name: "requests[#{request.id}][supplier]"}
      %option{value: request.supplier, selected: true}= request.supplier
  %td
    %input{type: :file, name: "requests[#{request.id}][attachments_attributes][][file]", multiple: true}
    %ul
      - request.attachments.each do |attachment|
        %li
          %a{href: attachment.file.url, target: '_blank'}
            = attachment.file.original_filename
