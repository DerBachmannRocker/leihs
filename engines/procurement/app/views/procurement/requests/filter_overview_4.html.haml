.well.well-sm
  #column-titles.row
    %b.col-sm-2
      %a{href: url_for(params: params.merge(sort_by: :article_name, sort_dir: params[:sort_dir] == 'asc' ? :desc : :asc ))}
        = _('Article')
        %i.fa.fa-sort
    %b.col-sm-2
      %a{href: url_for(params: params.merge(sort_by: :user, sort_dir: params[:sort_dir] == 'asc' ? :desc : :asc ))}
        = _('Requester')
        %i.fa.fa-sort
    %b.col-sm-2
      %a{href: url_for(params: params.merge(sort_by: :department, sort_dir: params[:sort_dir] == 'asc' ? :desc : :asc ))}
        = _('Organization')
        %i.fa.fa-sort
    %b.col-sm-1
      %a{href: url_for(params: params.merge(sort_by: :price, sort_dir: params[:sort_dir] == 'asc' ? :desc : :asc ))}
        = _('Price')
        %i.fa.fa-sort
    %b.col-sm-1
      %a{href: url_for(params: params.merge(sort_by: :requested_quantity, sort_dir: params[:sort_dir] == 'asc' ? :desc : :asc ))}
        = _('Quantities')
        %i.fa.fa-sort
    %b.col-sm-2
      %a{href: url_for(params: params.merge(sort_by: :total_price, sort_dir: params[:sort_dir] == 'asc' ? :desc : :asc ))}
        = "%s %s" % [_('Total'), _('Price')]
        %i.fa.fa-sort
    %b.col-sm-1
      %a{href: url_for(params: params.merge(sort_by: :priority, sort_dir: params[:sort_dir] == 'asc' ? :desc : :asc ))}
        = _('Priority')
        %i.fa.fa-sort
    %b.col-sm-1
      %a{href: url_for(params: params.merge(sort_by: :state, sort_dir: params[:sort_dir] == 'asc' ? :desc : :asc ))}
        = _('State')
        %i.fa.fa-sort

- @h.each_pair do |budget_period, requests|

  .panel{class: "panel-#{header_color(budget_period)}"}
    .panel-heading
      .row
        .col-sm-2.h4
          %i.fa.fa-calendar
          = budget_period
        .col-sm-6
          = render partial: 'procurement/budget_periods/phases', locals: {budget_period: budget_period}
        .col-sm-4
          - total_price = requests.map {|r| r.total_price(current_user) }.sum
          .label.label-primary.big_total_price
            %i.fa.fa-shopping-cart
            = money_without_cents_and_with_symbol total_price

    .panel-body
      - requests.group_by(&:group).each_pair do |group, requests|
        .row.bg-info{style: 'line-height: 2.5em'}
          .col-sm-8.h4
            %i.fa.fa-shopping-cart
            = group
            - if group.inspectable_by? current_user
              %a{href: overview_group_requests_path(group)}
                %i.fa.fa-plus-circle
          .col-sm-1
            - total_price = requests.map {|r| r.total_price(current_user) }.sum
            - budget_limit_amount = group.budget_limits.find_by(budget_period_id: budget_period.id).try(:amount)

            .label.label-default.budget_limit
              %i.fa.fa-pie-chart
              = money_without_cents_and_with_symbol budget_limit_amount
            %br
            .label.label-primary.big_total_price
              %i.fa.fa-shopping-cart
              = money_without_cents_and_with_symbol total_price

          .col-sm-3
            = render partial: 'procurement/requests/progress_radial', locals: {used: total_price.to_i, max: budget_limit_amount.to_i}

        - requests.each do |request|
          %a.list-group-item.row{href: group_user_budget_period_requests_path(request.group, request.user, request.budget_period)}
            .col-sm-2
              = request.article_name
            .col-sm-2
              = request.user
            .col-sm-2
              = request.organization.parent
              %br
              = request.organization
            .col-sm-1
              .label.label-primary.total_price
                %i.fa.fa-tag
                = money_without_cents_and_with_symbol request.price
            .col-sm-1.quantities
              :ruby
                state, label_class = state_label(request)
              .label{class: label_class}
                = request.requested_quantity
                %i.fa.fa-question
              %br
              .label{class: label_class}
                - if request.approved_quantity
                  = request.approved_quantity
                  %i.fa.fa-check
                - else
                  &nbsp;
              %br
              .label{class: label_class}
                - if request.order_quantity
                  = request.order_quantity
                  %i.fa.fa-shopping-cart
                - else
                  &nbsp;
            .col-sm-2
              %br
              %br
              .label.label-primary.total_price
                %i.fa.fa-shopping-cart
                = money_without_cents_and_with_symbol request.total_price(current_user)
            .col-sm-1
              .label.label-default= _(request.priority)
            .col-sm-1
              :ruby
                state, label_class = state_label(request)
              .label{class: label_class}
                = _(state.to_s.humanize)

:scss
  #column-titles > b {
    white-space: nowrap;
  }

  .panel-body {
    padding-top: 0;
    padding-bottom: 0;

    .list-group-item {
      padding-left: 0;
      padding-right: 0;
      min-height: 6em;

      .quantities .label {
        min-width: 4em;
        display: inline-block;
      }
    }
  }
