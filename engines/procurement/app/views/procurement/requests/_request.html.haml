.row.request
  .col-xs-6
    - if request.editable?(current_user)
      %input{type: :hidden, name: "requests[#{request.id}][id]", value: request.id}

    .form-group
      %label.col-xs-4.control-label
        = _('Article')
      .col-xs-8
        - if request.editable?(current_user) and not @group.template_categories.joins(:templates).where(procurement_templates: {model_description: request.model_description}).exists?
          %input.form-control{name: "requests[#{request.id}][model_description]", placeholder: _('Article'), value: request.model_description, data: {toggle: 'tooltip'}, title: request.model_description}
        - else
          = request.model_description

    .form-group
      %label.col-xs-4.control-label
        = _('Supplier')
      .col-xs-8
        - if request.editable?(current_user)
          %input.form-control{name: "requests[#{request.id}][supplier]", placeholder: _('Supplier'), value: request.supplier}
        - else
          = request.supplier

    .form-group
      %label.col-xs-4.control-label
        = _('Name of receiver')
      .col-xs-8
        - if request.editable?(current_user)
          %input.form-control{name: "requests[#{request.id}][receiver]", value: request.receiver, placeholder: _('Name of receiver'), autocomplete: :false}
        - else
          = request.receiver

    .form-group
      %label.col-xs-4.control-label
        = _('Point of Delivery')
      .col-xs-8
        - if request.editable?(current_user)
          %input.form-control{name: "requests[#{request.id}][location]", value: request.location, placeholder: _('Point of Delivery'), autocomplete: :false}
        - else
          = request.location

    .form-group
      %label.col-xs-4.control-label
        = _('Motivation')
      .col-xs-8
        - if request.editable?(current_user)
          %input.form-control{name: "requests[#{request.id}][motivation]", value: request.motivation, placeholder: _('Motivation'), maxlength: 255, data: {toggle: 'tooltip'}, title: _('max 255 characters')}
        - else
          = request.motivation

    .form-group
      %label.col-xs-4.control-label
        = _('Priority')
      .col-xs-8
        - if request.editable?(current_user) and request.user_id == current_user.id
          - ['high', 'normal'].each do |priority|
            %input{type: 'radio', name: "requests[#{request.id}][priority]", value: priority, checked: request.priority == priority}
            .label.label-default= _(priority)
        - else
          .label.label-default= _(request.priority)

    .form-group
      %label.col-xs-4.control-label
        = _('Attachments')
      .col-xs-8
        - if request.editable?(current_user)
          %input{type: :file, name: "requests[#{request.id}][attachments_attributes][][file]", multiple: true, style: "color:transparent;", onchange: "this.style.color = 'black';"}
        %ul
          - request.attachments.each do |attachment|
            %li
              %a{href: attachment.file.url, target: '_blank'}
                = attachment.file.original_filename

  .col-xs-6
    .form-group
      %label.col-xs-4.control-label
        = "%s %s" % [_('Item price'), MoneyRails.default_currency]
        %span.small=_('incl. VAT')
      .col-xs-4
        - if request.editable?(current_user)
          %input.form-control{name: "requests[#{request.id}][price]", type: :number, min: 0, value: request.price.to_i, placeholder: ("%s %s" % [_('Item price'), _('incl. VAT')]), autocomplete: :false}
        - else
          = money_without_cents_and_with_symbol request.price
      .col-xs-4

    .form-group
      %label.col-xs-4.control-label
        = _('Requested quantity')
      .col-xs-4
        - if request.editable?(current_user) and request.user_id == current_user.id
          %input.form-control{name: "requests[#{request.id}][requested_quantity]", type: :number, min: 0, value: request.requested_quantity, placeholder: _('Requested quantity'), autocomplete: :false}
        - else
          .label.label-primary
            = request.requested_quantity
      .col-xs-4

    - if request.group.inspectable_by?(current_user) or request.user_id == current_user.id
      .form-group
        %label.col-xs-4.control-label
          = _('Approved quantity')
        .col-xs-4
          - if request.editable?(current_user)
            %input.form-control{name: "requests[#{request.id}][approved_quantity]", type: :number, min: 0, value: request.approved_quantity, placeholder: _('Approved quantity'), autocomplete: :false}
          - else
            - if request.approved_quantity
              :ruby
                state, label_class = state_label(request)
              .label{class: label_class}
                = request.approved_quantity
        .col-xs-4

    - if request.group.inspectable_by?(current_user) or request.user_id == current_user.id
      .form-group
        %label.col-xs-4.control-label
          = _('Order quantity')
        .col-xs-4
          - if request.editable?(current_user)
            %input.form-control{name: "requests[#{request.id}][order_quantity]", type: :number, min: 0, max: (request.approved_quantity || 0), value: request.order_quantity, placeholder: _('Order quantity'), autocomplete: :false}
          - elsif request.approved_quantity and request.order_quantity
            .label{class: label_class}
              = request.order_quantity
        .col-xs-4

    .form-group
      %label.col-xs-4.control-label
        = "%s %s" % [_('Total'), MoneyRails.default_currency]
        %span.small= _('incl. VAT')
      .col-xs-8
        .label.label-primary.total_price{data: {total: request.total_price(current_user)}}
          = money_without_cents_and_with_symbol request.total_price(current_user)

    - if request.group.inspectable_by? current_user
      .form-group
        %label.col-xs-4.control-label
          = _('Inspection comment')
        .col-xs-8
          - if request.editable?(current_user)
            %input.form-control{name: "requests[#{request.id}][inspection_comment]", value: request.inspection_comment, placeholder: _('Inspection comment'), maxlength: 255, data: {toggle: 'tooltip'}, title: _('max 255 characters')}
          - else
            = request.inspection_comment

    .form-group
      %label.col-xs-4.control-label
        = _('State')
      .col-xs-6
        = render partial: 'state', locals: {request: request}

      .col-xs-2.text-right
        .btn-group
          %button.btn.btn-default.btn-sm.dropdown-toggle{type: 'button', data: {toggle: 'dropdown'}, aria: {haspopup: true, expanded: false}}
            %i.fa.fa-gear
            %span.caret
          %ul.dropdown-menu.dropdown-menu-right
            %li.dropdown-header
              %h5
                = _('Move to another group')
            - Procurement::Group.where.not(id: @group).each do |group|
              %li
                %a{href: move_group_user_budget_period_request_path(@group, @user, @budget_period, request, to_group_id: group.id), data: {method: :put}}
                  %i.fa.fa-arrow-right
                  = group
            %li.divider{role: 'separator'}
            - if request.group.inspectable_by? current_user
              %li.dropdown-header
                %h5
                  = _('Move to another budget period')
              - Procurement::BudgetPeriod.future.where.not(id: @budget_period).each do |budget_period|
                %li
                  %a{href: move_group_user_budget_period_request_path(@group, @user, @budget_period, request, to_budget_period_id: budget_period.id), data: {method: :put}}
                    %i.fa.fa-arrow-right
                    = budget_period
              %li.divider{role: 'separator'}
            %li
              %a{href: group_user_budget_period_request_path(@group, @user, @budget_period, request), data: {method: :delete}}
                %i.fa.fa-trash
                = _('Delete')
