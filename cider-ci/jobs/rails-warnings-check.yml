jobs:

  rails-warnings-check:

    name: 'Rails warnings check'

    description: |
      Check if rails outputs something to STDERR (warnings, etc.)

    run-on:
    - type: branch
      include-match: '^(.*master.*)$'
      exclude-match: '^(.*no-ci.*)$'

    context:

      tasks:
        count_stderr_lines:
          environment-variables:
            RAILS_ENV: test
            LANG: "en_US.UTF-8"
            DATABASE: "leihs_test_{{CIDER_CI_TRIAL_ID}}"

          max-auto-trials: 1
          name: Count if number of STDERR lines greater than 0

          scripts:
            configure-database:
              body: |
                #!/usr/bin/env ruby
                require 'yaml'
                config = \
                  { 'test' =>
                    { 'adapter' => 'mysql2',
                      'encoding' => 'utf8',
                      'host' => 'localhost',
                      'pool' => 3,
                      'username' => ENV['MYSQL_USER'],
                      'password' => ENV['MYSQL_PASSWORD'],
                      'database' => ENV['DATABASE']}}
                File.open('config/database.yml','w') { |file| file.write config.to_yaml }

            create-database:
              body:  echo $DATABASE && mysqladmin --user=$MYSQL_USER --password=$MYSQL_PASSWORD create $DATABASE
              start-when:
              - script: configure-database

            test:
              body: "cider-ci/bin/check_rails_warnings.rb"
              start-when:
              - script: create-database

            delete-database:
              body:  mysqladmin --user=$MYSQL_USER --password=$MYSQL_PASSWORD --force drop $DATABASE
              ignore-state: true
              ignore-abort: true
              start-when:
              - script: test
                states: [aborted, passed, failed, skipped]

